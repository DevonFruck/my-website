{"version":3,"sources":["Pages/AboutMe.jsx","Pages/ContactMe.jsx","Pages/MyExperiences.jsx","Components/NavBar.jsx","Components/SidebarMenu/SidebarMenu.jsx","App.js","reportWebVitals.js","index.js"],"names":["AboutMe","ContactMe","MyExperiences","styled","div","Button","SidebarMenu","useState","isExpanded","setIsExpanded","class","style","width","onClick","Menu","fontSize","margin","console","log","BadgeRounded","Code","Call","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","className","document","getElementById"],"mappings":"mPACaA,EAAU,WACrB,OACE,uECHSC,EAAY,WACrB,OACE,6DCFOC,EAAgB,WAC3B,OACE,4D,mCCecC,IAAOC,IAAV,wHAOMD,YAAOE,IAAPF,CAAH,8D,uCCrBLG,G,MAAc,WAEzB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,OACE,sBAAKC,MAAM,UAAUC,MAAQH,EAAa,CAAEI,MAAO,SAAW,CAACA,MAAO,UAAtE,UACE,yBAAQF,MAAM,WACZG,QAAS,kBAAMJ,GAAeD,IADhC,UAGE,cAACM,EAAA,EAAD,CAAMC,SAAS,QAAQJ,MAAO,CAAEK,OAAO,YACvC,sBAAML,MAAO,CAAEK,OAAO,UAAtB,qBAKF,yBAAQN,MAAM,WACZG,QAAS,WAAOI,QAAQC,IAAI,iBAD9B,UAGE,cAACC,EAAA,EAAD,CAAcJ,SAAS,QAAQJ,MAAO,CAAEK,OAAO,YAC/C,sBAAML,MAAO,CAAEK,OAAO,UAAtB,yBAKF,yBAAQN,MAAM,WACZG,QAAS,WAAOI,QAAQC,IAAI,iBAD9B,UAGE,cAACE,EAAA,EAAD,CAAML,SAAS,QAAQJ,MAAO,CAAEK,OAAO,YACvC,sBAAML,MAAO,CAAEK,OAAO,UAAtB,4BAKF,yBAAQN,MAAM,WACZG,QAAS,WAAOI,QAAQC,IAAI,iBAD9B,UAGE,cAACG,EAAA,EAAD,CAAMN,SAAS,QAAQJ,MAAO,CAAEK,OAAO,YACvC,sBAAML,MAAO,CAAEK,OAAO,UAAtB,gCCTOM,EArBI,WAEjB,OACE,sBAAKZ,MAAM,aAAX,UACE,cAAC,EAAD,IACA,sBAAKA,MAAM,eAAX,UACE,qBAAKA,MAAM,UAAX,SACE,cAAC,EAAD,MAEF,qBAAKA,MAAM,UAAX,SACE,cAAC,EAAD,MAEF,qBAAKA,MAAM,UAAX,SACE,cAAC,EAAD,aCXKa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKC,UAAU,iBAEjBC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.ed9015bc.chunk.js","sourcesContent":["\r\nexport const AboutMe = () => {\r\n  return (\r\n    <h1>Once I was born and soon I will die!</h1>\r\n  )\r\n}","export const ContactMe = () => {\r\n    return(\r\n      <h1>This is how to contact me!</h1>\r\n    )\r\n}","export const MyExperiences = () => {\r\n  return(\r\n    <h1>These are my experiences!</h1>\r\n  )\r\n}","import React from 'react'\r\nimport { ButtonGroup, Button } from '@material-ui/core'\r\nimport styled from 'styled-components'\r\n\r\nexport const NavBar = () => {\r\n  return (\r\n    <StyledDiv>\r\n      <ButtonGroup >\r\n        <StyledButton variant='contained' href='/'>Home</StyledButton>\r\n        <StyledButton variant='contained' href='/about'>About Me</StyledButton>\r\n        <StyledButton variant='contained' href='/experience'>Experience</StyledButton>\r\n        <StyledButton variant='contained' href='/contact'>Contact Me</StyledButton>\r\n      </ButtonGroup>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nconst StyledDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 5rem;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  height: 5rem;\r\n  width: 15rem;\r\n`\r\n","import React, { useState } from 'react'\r\nimport { Call, BadgeRounded, Menu, Code } from '@mui/icons-material'\r\nimport './SidebarMenu.css'\r\nexport const SidebarMenu = () => {\r\n\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  return (\r\n    <div class=\"wrapper\" style={ isExpanded ? { width: '20rem'} : {width: '3.5rem'}}>\r\n      <button class=\"menu-btn\"\r\n        onClick={() => setIsExpanded(!isExpanded)}\r\n      >\r\n        <Menu fontSize='large' style={{ margin:\"auto 0\" }}/>\r\n        <span style={{ margin:\"auto 0\" }}>\r\n          Menu\r\n        </span>\r\n      </button>\r\n      \r\n      <button class=\"menu-btn\"\r\n        onClick={() => {console.log('implement me')}}\r\n      >\r\n        <BadgeRounded fontSize='large' style={{ margin:\"auto 0\" }}/>\r\n        <span style={{ margin:\"auto 0\" }}>\r\n          About Me\r\n        </span>\r\n      </button>\r\n      \r\n      <button class=\"menu-btn\"\r\n        onClick={() => {console.log('implement me')}}\r\n      >\r\n        <Code fontSize='large' style={{ margin:\"auto 0\" }}/>\r\n        <span style={{ margin:\"auto 0\" }}>\r\n          Experiences\r\n        </span>\r\n      </button>\r\n\r\n      <button class=\"menu-btn\"\r\n        onClick={() => {console.log('implement me')}}\r\n      >\r\n        <Call fontSize='large' style={{ margin:\"auto 0\" }}/>\r\n        <span style={{ margin:\"auto 0\" }}>\r\n          Contact Me\r\n        </span>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './App.css'\r\nimport {\r\n  AboutMe,\r\n  ContactMe,\r\n  MyExperiences\r\n} from './Pages'\r\n\r\nimport { SidebarMenu } from './Components'\r\n\r\nexport const App = () => {\r\n\r\n  return (\r\n    <div class=\"background\">\r\n      <SidebarMenu />\r\n      <div class=\"content-pane\">\r\n        <div class=\"divider\">\r\n          <AboutMe />\r\n        </div>\r\n        <div class=\"divider\">\r\n          <MyExperiences />\r\n        </div>\r\n        <div class=\"divider\">\r\n          <ContactMe />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App className=\"App-header\"/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}